Since this is the 20th Network and Distributed Systems Security (NDSS) Symposium, we thought it would be appropriate to review some of the highlights, lowlights, and general trends in network and distributed systems over the past twenty years. We also plan to discuss the future trends in this area of research.
This paper shows that contrary to the beliefs of prior studies, typing patterns of inpiduals can be imitated. Our results from a large scale user study of over 80 participants show that various factors such as the password used, gender, monetary incentives, time allowed and information about the target typing pattern affects the success rate of the attacker.
WPA2-Enterprise wireless networks rely on TLS to protect the underlying MSCHAPv2 authentication. Other layers of the authentication process however, from the physical to the user interface, introduce weaknesses that allow hard to detect Man-In-The-Middle attacks. We propose a novel attack, a prototype implementation, and the evaluation of its end-to-end efficacy using user experiments to demonstrate the need for new security measures across the software stack.
In this paper, we propose a novel biometrics based system to achieve continuous and unobservable re-authentication for smartphones. Our system uses a classifier to learn the owner’s finger movement patterns and checks the current user’s finger movement patterns against the owner’s. Experiments show that our system is efficient on smartphones and achieves high accuracy.
We introduce PlaceRaider, a proof-of-concept mobile malware that exploits a smartphone’s camera and onboard sensors to reconstruct rich, 3D models of the victim’s indoor space using only opportunistically taken photos. Attackers can use these models to engage in remote reconnaissance and virtual theft of the victims’ environment. We substantiate this threat through human subject studies.
We systematically study two vulnerabilities in open content provider components of Android applications. The first vulnerability can be exploited to disclose various types of private in-app data while the second one can be leveraged to manipulate them and potentially cause serious side-effects.  Our evaluation with 62,519 Android applications shows that 2.3% of them are susceptible to these two vulnerabilities.
In this paper, we motivate and describe our work to bring flexible mandatory access control (MAC) to Android by enabling the effective use of Security Enhanced Linux (SELinux) for kernel-level MAC and by developing a set of middleware MAC extensions to the Android permissions model.
Much of the attention surrounding mobile malware has focused on the in-depth analysis of malicious applications. In this paper, we present the first empirical network level analysis of mobile malware using traffic from a major US cellular provider and quantify the extent to which devices are actually infected in the network.
To trace the provenance of cyber attacks, audit log analysis faces the challenge of input-output dependence explosion. We develop a binary analysis/hardening technique that partitions the execution of an event-driven process into multiple “units” so that logging can be performed with units — not processes — as subjects. Our evaluation shows significant improvement in attack provenance accuracy with low overhead.
We design and implement an automated approach to produce a kernel configuration that is adapted to a particular workload and hardware, and present an attack surface evaluation framework for evaluating security improvements for the different kernels obtained.  Our results show that, for real-world server use cases, the attack surface reduction obtained by tailoring the kernel ranges from about 50% to 85%.
Virtualizing a computer system is a complex task. Existing hosted hypervisors typically have a large code base which might introduce exploitable software bugs. DeHype is proposed to reduce the exposed attack surface of a hosted hypervisor by deprivileging most of its execution to user mode, which also brings additional benefits in allowing for better development as well as concurrent execution of multiple hosted hypervisors in the same physical machine.
The ability to update firmware is a feature found in nearly all modern embedded systems. We demonstrate how this feature can be exploited to allow attackers to inject malicious firmware modifications into vulnerable embedded devices. We discuss techniques for exploiting such vulnerable functionality, implement a proof-of-concept attack against HP LaserJet printers, survey the vulnerable population, analyze known vulnerabilities in third-party libraries and discuss defenses.
We present CAMP, a content-agnostic malware protection system. CAMP works on top of Google’s Safe Browsing API and leverages reputation data to improve blacklist-based protection mechanisms. This paper gives a detailed overview of CAMP and provides an evaluation of an operational deployment serving 200 million browser users. Our evaluation shows that CAMP detects approximately 5 million malware downloads per month. We also show that CAMP exhibits accuracy close to 99%.
We propose InteGuard, the first system that protects vulnerable web API integrations.  InteGuard operates a proxy in front of the service integrator’s web site, performing security checks on a set of invariant relations among the HTTP messages the integrator receives during a transaction. Our evaluation shows that it can defeat complicated exploits on high-profile web services with a small performance impact.
We present a novel framework for deriving formal security guarantees against traffic side-channels, and we propose algorithms for the efficient derivation of such guarantees for web applications.  We demonstrate the utility of our techniques in two case studies, where we derive formal guarantees for the security of a regional-language Wikipedia and an auto-complete input field.
We present NeighborWatcher, a comment spam inference system that exploits spammers’ spamming infrastructure information to infer comment spam. At its core, NeighborWatcher runs a graph-based algorithm to characterize the spamming neighbor relationship, and reports a spam link when the same link also appears in the harbor’s neighbors.
This paper addresses the problem of automatically extracting specifications from implementations and finding security flaws in them. We propose AUTHSCAN, an end-to-end platform to recover the authentication protocol specification from its implementations. AUTHSCAN finds a total of 7 security vulnerabilities in web applications using SSO protocol implementations and in custom web authentication logic of several web sites with millions of users.
The postMessage facility in HTML5 enables communication between web content from different origins.  We analyze postMessage receivers used in Alexa top 10,000 sites and demonstrate that many of them perform origin checks incorrectly.  This leads to multiple vulnerabilities, from cross-site scripting to injection of arbitrary content into localStorage. We then propose several patterns for safe usage of postMessage.
Modern mobile devices such as smartphones and tablets have become fully general computing systems with a rich third party application ecosystem and user experience.  As such, the same security problems that have long plagued the personal computer (PC) industry are becoming increasingly evident on mobile devices. Addressing these threats effectively requires a secure foundation, including both hardware and software mechanisms.  Device OEMs and mobile operating system developers have an opportunity to establish such a foundation by providing the right primitives for constructing secure systems and enabling their use in commodity mobile devices.  Many of the same security constructs that have been applied in the space of client and server PCs can and should be brought to the mobile arena.  In this talk, we lay out a vision for secure mobile computing, including a discussion of the roles that virtualization, trusted computing, and secure operating systems play in an overall security architecture and how these mechanisms can be realized in mobile devices today.
We show that social networks can improve user privacy! We present Pisces, a system for anonymous communication that leverages users’ trusted social contacts. Pisces minimizes an attacker’s ability to compromise user anonymity by explicitly considering social trust in the design of anonymous paths. Pisces is secure against a colluding byzantine adversary, and provides better anonymity than Tor.
We show that it is possible to enable the design of social network based systems, while protecting the privacy of users’ social contacts. Our approach is to perturb the social network graph, by removing existing edges and adding fake edges, such that the local community structures in the network are preserved. We characterize utility and privacy of such perturbed graphs.
COMPA detects compromised, yet legitimate social network accounts by building behavioral profiles for inpidual accounts and matching new messages against the extracted behavior. Should multiple similar messages violate their users’ behavioral profiles, COMPA declares these users as compromised. COMPA demonstrated high precision when evaluated on large-scale real-world datasets (1.4B Twitter, 106M Facebook messages).
We explore the feasibility of a crowdsourced system using human intuition to detect Sybil (fake accounts) in online social networks. We conduct a large user study using a large corpus of ground-truth from Facebook and Renren, and users from Amazon Turk and Chinese crowdsourcing systems. We find this approach promising and propose a multi-tier detection system that is both scalable and highly accurate.
In this paper, we make the first attempt to establish a baseline for the security comparison between iOS and Android. Our analysis over 2,600 cross-platform applications shows that iOS applications consistently access more security sensitive APIs than their counterparts on Android. We then investigate further on both third-party libraries and applications’ own code to reveal the underlying reasons.
To enable plausibly deniable encryption on mobile devices, we introduce Mobiflage that hides encrypted volumes within random data on the device’s external storage. By providing a decoy key, users can plausibly deny the existence of any hidden data. Our Android prototype includes countermeasures for known weaknesses in desktop PDE systems, and highlights challenges of implementing PDE schemes on mobile systems.
Malicious smartphone applications often surreptitiously access sensitive resources or abuse their privileges. We present a new approach for checking and enforcing policies concerning the context and order in which permissions and APIs may be used in an Android application. Our checker constructs Permission Event Graphs, a new, finite-state abstraction of the operating system context in which an application uses a permission. Our experiments show that we can check complex temporal policies with low false positives and false negatives.
This work describes new pre-computation techniques for cryptographic schemes that exploit recent results on Cayley graph expanders and leverage excess energy generated by micro solar cells and small wind turbines placed on low-power devices. Our improved schemes outperform prior art by as much as 50%.
This paper reports on a large-scale measurement study about the effects of measures against copyright infringement on One-Click Hosters (or “cyberlockers”). While such efforts are visible, their overall impact appears to be rather limited. The paper also discusses proposed new measures (such as SOPA) and finds that they may not be as successful as their proponents might expect.
OpenFlow is an open standard that has gained tremendous interest in the last few years.  In this paper we introduce FRESCO, an OpenFlow security application development framework designed to facilitate the rapid design, and modular composition of OF-enabled detection and mitigation modules. FRESCO offers a programming framework that enables security researchers to implement, and compose together, many different security modules.
Modern attackers increasingly exploit search engines as a vehicle to identify vulnerabilities and to gather information for launching new attacks. In this paper, we perform a large-scale quantitative analysis on bot queries received by the Bing search engine over month-long periods. Our analysis is based on an automated system, called SBotScope, that we develop to dissect large-scale bot queries. Our study shows that 33% of bot are searching for vulnerabilities, followed by 11% harvesting user account information. In one of our 16-day datasets, we uncover 8.2 million hosts from botnets and 13,364 hosts from data centers submitting bot queries.
Black hat search engine optimization (SEO) campaigns attempt to attract and monetize traffic.  Using Web site compromise and cloaking, SEO botnets can manipulate search result rankings, ultimately directing users to sites promoting scams (e.g. fake antivirus).  In this paper, we infiltrate an influential SEO botnet, GR, characterize its dynamics and effectiveness and identify key scams driving its innovation.
We propose an unobservable censorship-resistant infrastructure, called FreeWave. FreeWave works by modulating a client’s Internet traffic into acoustic signals that are carried over VoIP connections. The use of actual VoIP connections, as opposed to traffic mimicking, allows FreeWave to relay its VoIP connections through oblivious VoIP nodes, hence keeping the FreeWave server(s) unobservable and unblockable. We prototype FreeWave over Skype.
We propose a communication-efficient method for users to fetch multiple blocks in Goldberg’s information-theoretic private information retrieval (PIR) scheme. Our approach trades off some Byzantine robustness to improve throughput without affecting privacy. We leverage our multi-block queries to construct four symmetric PIR (SPIR) protocols for databases with variable-length records. Three of our protocols support pricing and are therefore well suited to privacy-friendly sales of digital goods.
A key challenge to the Tor bridge based circumvention system is to distribute bridges to a large scale of users while avoiding bridges falling into the hands of corrupt users. We propose rBridge — a user reputation system for bridge distribution to limit corrupt users from repeatedly blocking bridges. In addition, we study the privacy preservation problem in bridge distribution and propose a privacy-preserving rBridge scheme.
We develop large network graphs that capture the live Tor network’s autonomous system boundaries, points-of-presence, inter-relay latencies and relay performance characteristics. Using our network models, we evaluate a series of proposed relay selection strategies under various network conditions.  We additionally quantify the anonymity properties of each approach using simulations driven by data from the live Tor network.
A lack of incentives for volunteers to contribute resources to Tor has lead to performance and scalability problems while hindering user anonymity. We introduce LIRA, a scheme that uses proportional differentiation to produce performance incentives for contributors and a novel cryptographic lottery scheme that is more efficient and provides better anonymity than previous Tor incentive proposals.
We propose a user-friendly authentication system (KinWrite) that lets users write their passwords in 3D space and captures the handwriting movement using a low cost motion input sensing device — Kinect.  Because of the built-in behavioral biometrics in handwriting, KinWrite allows users to choose short and easy-to-memorize passwords while providing resistance  to password cracking.
We propose a new approach to detection of counterfeit tags and goods in RFID-enabled supply chains. Called tailing, our approach involves periodic insertion of random data into tags, creating a kind of “synthetic pedigree.” We show in supply-chain simulations how our approach enables a verifier to detect bogus tags even when hindered by partial visibility.
Often a cryptographic standard offers a choice between several algorithms to perform the same cryptographic task, including secure state-of-the-art cryptosystems, as well as insecure legacy cryptosystems with known vulnerabilities that are made available for backwards compatibility reasons. Obviously using insecure legacy cryptosystems is dangerous. However, we show the less obvious fact that even if users have the best of intentions to use only the most up-to-date, vulnerability-free version of a system, the mere existence of support for old versions can have a catastrophic effect on security.
At NDSS 2012, Yan et al. proposed a generic statistical attack on counting-based authentication protocols. However, they did not give details of any fixes against this attack barring a few suggestions. We generalize this attack with a much more comprehensive theoretical analysis, and propose two fixes to make counting-based protocols practically safe against the attack at the cost of usability.
We present a new technique by which a server can verify the consistency of a client’s behavior with the sanctioned client software, even though the server does not know inputs local to the client that are driving its behavior.  Our approach improves upon previous approaches in precision, bandwidth consumption, and/or computational expense.
Opaque, i.e., compressed or encrypted, traffic incurs high overhead for DPI engines yet often yields little useful information. Our experiments indicate that 89% of payload-carrying TCP packets are opaque. We provide a first step toward addressing the challenges presented by the abundance of opaque traffic by introducing new techniques for accurate real-time filtering of opaque packets in 16 bytes or less.
We propose Verito, a practical solution that provides transparency and accountability for purchase of virtual goods and services online platforms like Facebook, Xbox and IOS. Consumer interests, including transparency, fairness, non-repudiation, and performance issues, are protected through the use of a novel combination of cryptographic solutions, without the need to rely solely on platform providers or regulation.
This work proposes the first feasible solutions for secure multi-party computation with real numbers in floating point representation. It also provides techniques for performing more complex operations such as square root, logarithm, and exponentiation. Our experiments show that not only are the proposed protocols efficient, but in certain cases they outperform operations on integers.
Unique-Bid auction sites have gained popularity on the Internet in recent years. Using data extracted from such a site, we constructed an agent-based model simulating users’ bidding behaviors. We designed several automated winning strategies that performed well in the simulated environment. Finally, we demonstrated one strategy against a commercial auction site, achieving a 91% win rate and over 1000GBP profit.
Access-control policies in Web applications ensure that only authorized users can navigate to privileged pages, access databases, and perform other sensitive operations.  Unfortunately, errors in access-control logic are very common.  We present FixMeUp, a new static analysis tool that finds access-control bugs in PHP applications and generates repairs.
Malicious activity (spam, scans, botnets) arises from virtually anywhere on the Internet and frequently shifts longitudinally over time. We develop the first algorithmic techniques to automatically infer regions of the Internet with shifting security characteristics in an online fashion. Our evaluations on real network data highlight some regions (some small ISPs and hosting providers) are prone to much faster changes than others.
In this paper, we propose an efficient static method for detection of malicious PDF documents which relies on essential differences in the structural properties of malicious and benign PDF files. We demonstrate its effectiveness on a data corpus containing about 600,000 real-world malicious and benign PDF files and evaluate its resistance against adversarial evasion attempts.
This work presents the design, implementation, and deployment of a network of 500 fully functional vulnerable websites aimed at studying what attackers do after they compromise a web application. Over 100 days of experiments, our system was able to collect and cluster 6,000 attacks containing over 85,000 files. This allowed us to draw a general picture of the web application attack landscape.
